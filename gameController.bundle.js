"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkbattleship"] = self["webpackChunkbattleship"] || []).push([["gameController"],{

/***/ "./src/gameBoard.js":
/*!**************************!*\
  !*** ./src/gameBoard.js ***!
  \**************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ GameBoard)\n/* harmony export */ });\n/* harmony import */ var _ship_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ship.js */ \"./src/ship.js\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n\n\nclass GameBoard {\n  constructor(size = 10) {\n    this.grid = Array.from({ length: size }, () => Array(size).fill(null));\n    this.missedShots = [];\n    this.ships = [];\n  }\n\n  placeShip(ship, startCoord, direction) {\n    const [startX, startY] = startCoord;\n    const length = ship.length;\n\n    const [endX, endY] = this.calculateEndCoordinates(\n      startX,\n      startY,\n      length,\n      direction\n    );\n\n    if (endX >= this.grid.length || endY >= this.grid[0].length) {\n      throw new Error(\"Ship placement is out of bounds\");\n    }\n\n    // Check if ship overlaps with existing ships\n    for (let i = 0; i < length; i++) {\n      const x = direction === \"horizontal\" ? startX : startX + i;\n      const y = direction === \"horizontal\" ? startY + i : startY;\n\n      if (this.grid[x][y] !== null) {\n        throw new Error(\"Ship placement overlaps with another ship\");\n      }\n    }\n\n    // Place the ship on the grid\n    for (let i = 0; i < length; i++) {\n      const x = direction === \"horizontal\" ? startX : startX + i;\n      const y = direction === \"horizontal\" ? startY + i : startY;\n\n      this.grid[x][y] = ship; // Place ship reference in grid\n    }\n\n    // Add ship to ships array for tracking\n    this.ships.push(ship);\n  }\n\n  receiveAttack(coord) {\n    const [x, y] = coord;\n    const cell = this.grid[x][y];\n\n    if (cell === null) {\n      // Miss\n      this.grid[x][y] = \"O\"; // Mark as miss\n      this.missedShots.push(coord);\n      return false;\n    } else if (cell instanceof _ship_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]) {\n      // Hit on a ship\n      cell.hit(); // Increment the ship's hit counter\n      this.grid[x][y] = \"X\"; // Mark cell as hit\n      //this.grid[x][y] = { ship: cell, hit: true };  // Mark cell as hit\n      return true;\n    }\n\n    return false; // Already attacked or invalid cell\n  }\n\n  allShipsSunk() {\n    return this.ships.every((ship) => ship.isSunk());\n  }\n\n  calculateEndCoordinates(startX, startY, length, direction) {\n    let endX = startX;\n    let endY = startY;\n\n    if (direction === \"horizontal\") {\n      endY = startY + length - 1;\n    } else if (direction === \"vertical\") {\n      endX = startX + length - 1;\n    }\n\n    return [endX, endY];\n  }\n\n  printBoard() {\n    console.log(\n      this.grid\n        .map((row) => row.map((cell) => (cell ? \"S\" : \"-\")).join(\" \"))\n        .join(\"\\n\")\n    );\n  }\n}\n\nmodule.exports = GameBoard;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZ2FtZUJvYXJkLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUE2Qjs7QUFFZDtBQUNmO0FBQ0EsNkJBQTZCLGNBQWM7QUFDM0M7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0Esb0JBQW9CLFlBQVk7QUFDaEM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLG9CQUFvQixZQUFZO0FBQ2hDO0FBQ0E7O0FBRUEsOEJBQThCO0FBQzlCOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0EsTUFBTSx5QkFBeUIsZ0RBQUk7QUFDbkM7QUFDQSxrQkFBa0I7QUFDbEIsNkJBQTZCO0FBQzdCLDRCQUE0QiwwQkFBMEI7QUFDdEQ7QUFDQTs7QUFFQSxrQkFBa0I7QUFDbEI7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL3NyYy9nYW1lQm9hcmQuanM/MjhiMyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgU2hpcCBmcm9tIFwiLi9zaGlwLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEdhbWVCb2FyZCB7XG4gIGNvbnN0cnVjdG9yKHNpemUgPSAxMCkge1xuICAgIHRoaXMuZ3JpZCA9IEFycmF5LmZyb20oeyBsZW5ndGg6IHNpemUgfSwgKCkgPT4gQXJyYXkoc2l6ZSkuZmlsbChudWxsKSk7XG4gICAgdGhpcy5taXNzZWRTaG90cyA9IFtdO1xuICAgIHRoaXMuc2hpcHMgPSBbXTtcbiAgfVxuXG4gIHBsYWNlU2hpcChzaGlwLCBzdGFydENvb3JkLCBkaXJlY3Rpb24pIHtcbiAgICBjb25zdCBbc3RhcnRYLCBzdGFydFldID0gc3RhcnRDb29yZDtcbiAgICBjb25zdCBsZW5ndGggPSBzaGlwLmxlbmd0aDtcblxuICAgIGNvbnN0IFtlbmRYLCBlbmRZXSA9IHRoaXMuY2FsY3VsYXRlRW5kQ29vcmRpbmF0ZXMoXG4gICAgICBzdGFydFgsXG4gICAgICBzdGFydFksXG4gICAgICBsZW5ndGgsXG4gICAgICBkaXJlY3Rpb25cbiAgICApO1xuXG4gICAgaWYgKGVuZFggPj0gdGhpcy5ncmlkLmxlbmd0aCB8fCBlbmRZID49IHRoaXMuZ3JpZFswXS5sZW5ndGgpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIlNoaXAgcGxhY2VtZW50IGlzIG91dCBvZiBib3VuZHNcIik7XG4gICAgfVxuXG4gICAgLy8gQ2hlY2sgaWYgc2hpcCBvdmVybGFwcyB3aXRoIGV4aXN0aW5nIHNoaXBzXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykge1xuICAgICAgY29uc3QgeCA9IGRpcmVjdGlvbiA9PT0gXCJob3Jpem9udGFsXCIgPyBzdGFydFggOiBzdGFydFggKyBpO1xuICAgICAgY29uc3QgeSA9IGRpcmVjdGlvbiA9PT0gXCJob3Jpem9udGFsXCIgPyBzdGFydFkgKyBpIDogc3RhcnRZO1xuXG4gICAgICBpZiAodGhpcy5ncmlkW3hdW3ldICE9PSBudWxsKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIlNoaXAgcGxhY2VtZW50IG92ZXJsYXBzIHdpdGggYW5vdGhlciBzaGlwXCIpO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8vIFBsYWNlIHRoZSBzaGlwIG9uIHRoZSBncmlkXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykge1xuICAgICAgY29uc3QgeCA9IGRpcmVjdGlvbiA9PT0gXCJob3Jpem9udGFsXCIgPyBzdGFydFggOiBzdGFydFggKyBpO1xuICAgICAgY29uc3QgeSA9IGRpcmVjdGlvbiA9PT0gXCJob3Jpem9udGFsXCIgPyBzdGFydFkgKyBpIDogc3RhcnRZO1xuXG4gICAgICB0aGlzLmdyaWRbeF1beV0gPSBzaGlwOyAvLyBQbGFjZSBzaGlwIHJlZmVyZW5jZSBpbiBncmlkXG4gICAgfVxuXG4gICAgLy8gQWRkIHNoaXAgdG8gc2hpcHMgYXJyYXkgZm9yIHRyYWNraW5nXG4gICAgdGhpcy5zaGlwcy5wdXNoKHNoaXApO1xuICB9XG5cbiAgcmVjZWl2ZUF0dGFjayhjb29yZCkge1xuICAgIGNvbnN0IFt4LCB5XSA9IGNvb3JkO1xuICAgIGNvbnN0IGNlbGwgPSB0aGlzLmdyaWRbeF1beV07XG5cbiAgICBpZiAoY2VsbCA9PT0gbnVsbCkge1xuICAgICAgLy8gTWlzc1xuICAgICAgdGhpcy5ncmlkW3hdW3ldID0gXCJPXCI7IC8vIE1hcmsgYXMgbWlzc1xuICAgICAgdGhpcy5taXNzZWRTaG90cy5wdXNoKGNvb3JkKTtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9IGVsc2UgaWYgKGNlbGwgaW5zdGFuY2VvZiBTaGlwKSB7XG4gICAgICAvLyBIaXQgb24gYSBzaGlwXG4gICAgICBjZWxsLmhpdCgpOyAvLyBJbmNyZW1lbnQgdGhlIHNoaXAncyBoaXQgY291bnRlclxuICAgICAgdGhpcy5ncmlkW3hdW3ldID0gXCJYXCI7IC8vIE1hcmsgY2VsbCBhcyBoaXRcbiAgICAgIC8vdGhpcy5ncmlkW3hdW3ldID0geyBzaGlwOiBjZWxsLCBoaXQ6IHRydWUgfTsgIC8vIE1hcmsgY2VsbCBhcyBoaXRcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cblxuICAgIHJldHVybiBmYWxzZTsgLy8gQWxyZWFkeSBhdHRhY2tlZCBvciBpbnZhbGlkIGNlbGxcbiAgfVxuXG4gIGFsbFNoaXBzU3VuaygpIHtcbiAgICByZXR1cm4gdGhpcy5zaGlwcy5ldmVyeSgoc2hpcCkgPT4gc2hpcC5pc1N1bmsoKSk7XG4gIH1cblxuICBjYWxjdWxhdGVFbmRDb29yZGluYXRlcyhzdGFydFgsIHN0YXJ0WSwgbGVuZ3RoLCBkaXJlY3Rpb24pIHtcbiAgICBsZXQgZW5kWCA9IHN0YXJ0WDtcbiAgICBsZXQgZW5kWSA9IHN0YXJ0WTtcblxuICAgIGlmIChkaXJlY3Rpb24gPT09IFwiaG9yaXpvbnRhbFwiKSB7XG4gICAgICBlbmRZID0gc3RhcnRZICsgbGVuZ3RoIC0gMTtcbiAgICB9IGVsc2UgaWYgKGRpcmVjdGlvbiA9PT0gXCJ2ZXJ0aWNhbFwiKSB7XG4gICAgICBlbmRYID0gc3RhcnRYICsgbGVuZ3RoIC0gMTtcbiAgICB9XG5cbiAgICByZXR1cm4gW2VuZFgsIGVuZFldO1xuICB9XG5cbiAgcHJpbnRCb2FyZCgpIHtcbiAgICBjb25zb2xlLmxvZyhcbiAgICAgIHRoaXMuZ3JpZFxuICAgICAgICAubWFwKChyb3cpID0+IHJvdy5tYXAoKGNlbGwpID0+IChjZWxsID8gXCJTXCIgOiBcIi1cIikpLmpvaW4oXCIgXCIpKVxuICAgICAgICAuam9pbihcIlxcblwiKVxuICAgICk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBHYW1lQm9hcmQ7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/gameBoard.js\n");

/***/ }),

/***/ "./src/gameController.js":
/*!*******************************!*\
  !*** ./src/gameController.js ***!
  \*******************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ GameBoardController)\n/* harmony export */ });\n/* harmony import */ var _ship_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ship.js */ \"./src/ship.js\");\n/* harmony import */ var _gameBoard_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./gameBoard.js */ \"./src/gameBoard.js\");\n/* harmony import */ var _player_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./player.js */ \"./src/player.js\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n\n\n\n\nclass GameBoardController {\n  constructor() {\n    this.player = new _player_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]();\n    this.computer = new _player_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](true);\n    this.currentPlayer = this.player;\n  }\n\n  initializeGame() {\n    this.player = new _player_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]();\n    this.computer = new _player_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](true);\n\n    const playerShip = new _ship_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](3);\n    const computerShip = new _ship_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](4);\n\n    this.player.gameBoard.placeShip(playerShip, [0, 0], \"vertical\");\n    this.computer.gameBoard.placeShip(computerShip, [3, 3], \"horizontal\");\n\n    this.currentPlayer = this.player;\n  }\n\n  startGame() {\n    while (!this.checkGameOver()) {\n      const coord = this.currentPlayer.isComputer\n        ? this.computer.generateRandomAttack()\n        : this.getPlayerInput();\n      this.takeTurn(coord);\n      this.switchTurns();\n    }\n  }\n\n  takeTurn(coord) {\n    // Attack the opponent at the specified coordinates\n    const opponent = this.getOpponent();\n\n    console.log(`Attacking ${coord} on opponent's grid...`);\n    console.log(\"Opponent's current grid:\");\n    this.logResult(opponent.gameBoard.grid); // Log opponent's grid before attack\n\n    const result = this.currentPlayer.attack(opponent, coord);\n\n    // Log the outcome of the attack\n    console.log(result ? `Hit at ${coord}!` : `Miss at ${coord}.`);\n\n    console.log(\"Opponent's grid after attack:\");\n    this.logResult(opponent.gameBoard.grid); // Log opponent's grid after attack\n\n    // Optional: log boards after each attack for debugging\n    if (result) {\n      console.log(\"Player's board:\");\n      this.logResult(this.player.gameBoard.grid);\n      console.log(\"Computer's board:\");\n      this.logResult(this.computer.gameBoard.grid);\n    }\n\n    // Switch turns to the other player\n    this.switchTurns();\n  }\n\n  checkGameOver() {\n    return (\n      this.player.gameBoard.allShipsSunk() ||\n      this.computer.gameBoard.allShipsSunk()\n    );\n  }\n\n  switchTurns() {\n    this.currentPlayer =\n      this.currentPlayer === this.player ? this.computer : this.player;\n  }\n\n  getOpponent() {\n    return this.currentPlayer === this.player ? this.computer : this.player;\n  }\n\n  logResult(grid) {\n    const formattedGrid = grid.map((row) =>\n      row.map((cell) => {\n        if (cell === null) return \"~\"; // Empty water\n        if (cell === false) return \"O\"; // Missed shot\n        if (cell === true) return \"X\"; // Hit on a ship\n        if (cell instanceof _ship_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]) return \"S\"; // Ship part (ship object)\n        return cell;\n      })\n    );\n\n    // Use console.table to log the grid in a table format\n    console.table(formattedGrid);\n  }\n}\n\nmodule.exports = GameBoardController;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZ2FtZUNvbnRyb2xsZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBNkI7QUFDVTtBQUNOOztBQUVsQjtBQUNmO0FBQ0Esc0JBQXNCLGtEQUFNO0FBQzVCLHdCQUF3QixrREFBTTtBQUM5QjtBQUNBOztBQUVBO0FBQ0Esc0JBQXNCLGtEQUFNO0FBQzVCLHdCQUF3QixrREFBTTs7QUFFOUIsMkJBQTJCLGdEQUFJO0FBQy9CLDZCQUE2QixnREFBSTs7QUFFakM7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsNkJBQTZCLE9BQU87QUFDcEM7QUFDQSw2Q0FBNkM7O0FBRTdDOztBQUVBO0FBQ0EsbUNBQW1DLE1BQU0sZ0JBQWdCLE1BQU07O0FBRS9EO0FBQ0EsNkNBQTZDOztBQUU3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSx1Q0FBdUM7QUFDdkMsd0NBQXdDO0FBQ3hDLHVDQUF1QztBQUN2Qyw0QkFBNEIsZ0RBQUksY0FBYztBQUM5QztBQUNBLE9BQU87QUFDUDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL2JhdHRsZXNoaXAvLi9zcmMvZ2FtZUNvbnRyb2xsZXIuanM/OWI2YyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgU2hpcCBmcm9tIFwiLi9zaGlwLmpzXCI7XG5pbXBvcnQgR2FtZUJvYXJkIGZyb20gXCIuL2dhbWVCb2FyZC5qc1wiO1xuaW1wb3J0IFBsYXllciBmcm9tIFwiLi9wbGF5ZXIuanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgR2FtZUJvYXJkQ29udHJvbGxlciB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMucGxheWVyID0gbmV3IFBsYXllcigpO1xuICAgIHRoaXMuY29tcHV0ZXIgPSBuZXcgUGxheWVyKHRydWUpO1xuICAgIHRoaXMuY3VycmVudFBsYXllciA9IHRoaXMucGxheWVyO1xuICB9XG5cbiAgaW5pdGlhbGl6ZUdhbWUoKSB7XG4gICAgdGhpcy5wbGF5ZXIgPSBuZXcgUGxheWVyKCk7XG4gICAgdGhpcy5jb21wdXRlciA9IG5ldyBQbGF5ZXIodHJ1ZSk7XG5cbiAgICBjb25zdCBwbGF5ZXJTaGlwID0gbmV3IFNoaXAoMyk7XG4gICAgY29uc3QgY29tcHV0ZXJTaGlwID0gbmV3IFNoaXAoNCk7XG5cbiAgICB0aGlzLnBsYXllci5nYW1lQm9hcmQucGxhY2VTaGlwKHBsYXllclNoaXAsIFswLCAwXSwgXCJ2ZXJ0aWNhbFwiKTtcbiAgICB0aGlzLmNvbXB1dGVyLmdhbWVCb2FyZC5wbGFjZVNoaXAoY29tcHV0ZXJTaGlwLCBbMywgM10sIFwiaG9yaXpvbnRhbFwiKTtcblxuICAgIHRoaXMuY3VycmVudFBsYXllciA9IHRoaXMucGxheWVyO1xuICB9XG5cbiAgc3RhcnRHYW1lKCkge1xuICAgIHdoaWxlICghdGhpcy5jaGVja0dhbWVPdmVyKCkpIHtcbiAgICAgIGNvbnN0IGNvb3JkID0gdGhpcy5jdXJyZW50UGxheWVyLmlzQ29tcHV0ZXJcbiAgICAgICAgPyB0aGlzLmNvbXB1dGVyLmdlbmVyYXRlUmFuZG9tQXR0YWNrKClcbiAgICAgICAgOiB0aGlzLmdldFBsYXllcklucHV0KCk7XG4gICAgICB0aGlzLnRha2VUdXJuKGNvb3JkKTtcbiAgICAgIHRoaXMuc3dpdGNoVHVybnMoKTtcbiAgICB9XG4gIH1cblxuICB0YWtlVHVybihjb29yZCkge1xuICAgIC8vIEF0dGFjayB0aGUgb3Bwb25lbnQgYXQgdGhlIHNwZWNpZmllZCBjb29yZGluYXRlc1xuICAgIGNvbnN0IG9wcG9uZW50ID0gdGhpcy5nZXRPcHBvbmVudCgpO1xuXG4gICAgY29uc29sZS5sb2coYEF0dGFja2luZyAke2Nvb3JkfSBvbiBvcHBvbmVudCdzIGdyaWQuLi5gKTtcbiAgICBjb25zb2xlLmxvZyhcIk9wcG9uZW50J3MgY3VycmVudCBncmlkOlwiKTtcbiAgICB0aGlzLmxvZ1Jlc3VsdChvcHBvbmVudC5nYW1lQm9hcmQuZ3JpZCk7IC8vIExvZyBvcHBvbmVudCdzIGdyaWQgYmVmb3JlIGF0dGFja1xuXG4gICAgY29uc3QgcmVzdWx0ID0gdGhpcy5jdXJyZW50UGxheWVyLmF0dGFjayhvcHBvbmVudCwgY29vcmQpO1xuXG4gICAgLy8gTG9nIHRoZSBvdXRjb21lIG9mIHRoZSBhdHRhY2tcbiAgICBjb25zb2xlLmxvZyhyZXN1bHQgPyBgSGl0IGF0ICR7Y29vcmR9IWAgOiBgTWlzcyBhdCAke2Nvb3JkfS5gKTtcblxuICAgIGNvbnNvbGUubG9nKFwiT3Bwb25lbnQncyBncmlkIGFmdGVyIGF0dGFjazpcIik7XG4gICAgdGhpcy5sb2dSZXN1bHQob3Bwb25lbnQuZ2FtZUJvYXJkLmdyaWQpOyAvLyBMb2cgb3Bwb25lbnQncyBncmlkIGFmdGVyIGF0dGFja1xuXG4gICAgLy8gT3B0aW9uYWw6IGxvZyBib2FyZHMgYWZ0ZXIgZWFjaCBhdHRhY2sgZm9yIGRlYnVnZ2luZ1xuICAgIGlmIChyZXN1bHQpIHtcbiAgICAgIGNvbnNvbGUubG9nKFwiUGxheWVyJ3MgYm9hcmQ6XCIpO1xuICAgICAgdGhpcy5sb2dSZXN1bHQodGhpcy5wbGF5ZXIuZ2FtZUJvYXJkLmdyaWQpO1xuICAgICAgY29uc29sZS5sb2coXCJDb21wdXRlcidzIGJvYXJkOlwiKTtcbiAgICAgIHRoaXMubG9nUmVzdWx0KHRoaXMuY29tcHV0ZXIuZ2FtZUJvYXJkLmdyaWQpO1xuICAgIH1cblxuICAgIC8vIFN3aXRjaCB0dXJucyB0byB0aGUgb3RoZXIgcGxheWVyXG4gICAgdGhpcy5zd2l0Y2hUdXJucygpO1xuICB9XG5cbiAgY2hlY2tHYW1lT3ZlcigpIHtcbiAgICByZXR1cm4gKFxuICAgICAgdGhpcy5wbGF5ZXIuZ2FtZUJvYXJkLmFsbFNoaXBzU3VuaygpIHx8XG4gICAgICB0aGlzLmNvbXB1dGVyLmdhbWVCb2FyZC5hbGxTaGlwc1N1bmsoKVxuICAgICk7XG4gIH1cblxuICBzd2l0Y2hUdXJucygpIHtcbiAgICB0aGlzLmN1cnJlbnRQbGF5ZXIgPVxuICAgICAgdGhpcy5jdXJyZW50UGxheWVyID09PSB0aGlzLnBsYXllciA/IHRoaXMuY29tcHV0ZXIgOiB0aGlzLnBsYXllcjtcbiAgfVxuXG4gIGdldE9wcG9uZW50KCkge1xuICAgIHJldHVybiB0aGlzLmN1cnJlbnRQbGF5ZXIgPT09IHRoaXMucGxheWVyID8gdGhpcy5jb21wdXRlciA6IHRoaXMucGxheWVyO1xuICB9XG5cbiAgbG9nUmVzdWx0KGdyaWQpIHtcbiAgICBjb25zdCBmb3JtYXR0ZWRHcmlkID0gZ3JpZC5tYXAoKHJvdykgPT5cbiAgICAgIHJvdy5tYXAoKGNlbGwpID0+IHtcbiAgICAgICAgaWYgKGNlbGwgPT09IG51bGwpIHJldHVybiBcIn5cIjsgLy8gRW1wdHkgd2F0ZXJcbiAgICAgICAgaWYgKGNlbGwgPT09IGZhbHNlKSByZXR1cm4gXCJPXCI7IC8vIE1pc3NlZCBzaG90XG4gICAgICAgIGlmIChjZWxsID09PSB0cnVlKSByZXR1cm4gXCJYXCI7IC8vIEhpdCBvbiBhIHNoaXBcbiAgICAgICAgaWYgKGNlbGwgaW5zdGFuY2VvZiBTaGlwKSByZXR1cm4gXCJTXCI7IC8vIFNoaXAgcGFydCAoc2hpcCBvYmplY3QpXG4gICAgICAgIHJldHVybiBjZWxsO1xuICAgICAgfSlcbiAgICApO1xuXG4gICAgLy8gVXNlIGNvbnNvbGUudGFibGUgdG8gbG9nIHRoZSBncmlkIGluIGEgdGFibGUgZm9ybWF0XG4gICAgY29uc29sZS50YWJsZShmb3JtYXR0ZWRHcmlkKTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IEdhbWVCb2FyZENvbnRyb2xsZXI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/gameController.js\n");

/***/ }),

/***/ "./src/player.js":
/*!***********************!*\
  !*** ./src/player.js ***!
  \***********************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Player)\n/* harmony export */ });\n/* harmony import */ var _ship_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ship.js */ \"./src/ship.js\");\n/* harmony import */ var _gameBoard_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./gameBoard.js */ \"./src/gameBoard.js\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n\n\n\nclass Player {\n  constructor(isComputer = false) {\n    this.gameBoard = new _gameBoard_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\n    this.isComputer = isComputer;\n    this.previousAttacks = []; // Track all attempted coordinates\n    this.hitQueue = []; // Queue of adjacent cells to try after a hit\n  }\n\n  attack(opponent, coord) {\n    console.log(`Attacking ${coord}...`);\n    const result = opponent.gameBoard.receiveAttack(coord);\n\n    if (result === true) {\n      console.log(`Hit at ${coord}! Enqueuing adjacent cells.`);\n      this.enqueueAdjacentCells(coord); // Add adjacent cells to queue on hit\n    } else {\n      console.log(`Miss at ${coord}.`);\n    }\n\n    // Record attack attempt\n    this.previousAttacks.push(coord);\n    return result;\n  }\n\n  // Add adjacent cells to the queue if they haven't been attempted\n  enqueueAdjacentCells([x, y]) {\n    const adjacentCoords = [\n      [x + 1, y],\n      [x - 1, y],\n      [x, y + 1],\n      [x, y - 1],\n    ];\n\n    adjacentCoords.forEach((coord) => {\n      if (this.isValidCoord(coord) && !this.isPreviouslyAttacked(coord)) {\n        this.hitQueue.push(coord);\n      }\n    });\n  }\n\n  // Check if a coordinate is within bounds\n  isValidCoord([x, y]) {\n    return x >= 0 && x < 10 && y >= 0 && y < 10;\n  }\n\n  // Check if a coordinate hasn't been attacked\n  isPreviouslyAttacked(coord) {\n    return this.previousAttacks.some(\n      (previous) => previous[0] === coord[0] && previous[1] === coord[1]\n    );\n  }\n\n  generateSmartAttack() {\n    // If there are cells in the hit queue, prioritize them\n    if (this.hitQueue.length > 0) {\n      this.previousAttacks.push(this.hitQueue[0]);\n      return this.hitQueue.shift(); // Get the next adjacent cell to attack\n    }\n\n    // Fallback to a random attack if no adjacent cells remain\n    return this.generateRandomAttack();\n  }\n\n  generateRandomAttack() {\n    // Prioritize coordinates from hitQueue\n    if (this.hitQueue.length > 0) {\n      this.previousAttacks.push(this.hitQueue[0]);\n      return this.hitQueue.shift();\n    }\n\n    // Otherwise, generate random unique coordinates\n    let coord;\n    do {\n      coord = [Math.floor(Math.random() * 10), Math.floor(Math.random() * 10)];\n    } while (\n      this.previousAttacks.some(\n        (attackedCoord) =>\n          attackedCoord[0] === coord[0] && attackedCoord[1] === coord[1]\n      )\n    );\n\n    this.previousAttacks.push(coord);\n    return coord;\n  }\n}\n\nmodule.exports = Player;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcGxheWVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBNkI7QUFDVTs7QUFFeEI7QUFDZjtBQUNBLHlCQUF5QixxREFBUztBQUNsQztBQUNBLCtCQUErQjtBQUMvQix3QkFBd0I7QUFDeEI7O0FBRUE7QUFDQSw2QkFBNkIsTUFBTTtBQUNuQzs7QUFFQTtBQUNBLDRCQUE0QixNQUFNO0FBQ2xDLHdDQUF3QztBQUN4QyxNQUFNO0FBQ04sNkJBQTZCLE1BQU07QUFDbkM7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0M7QUFDcEM7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL3NyYy9wbGF5ZXIuanM/YThhMiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgU2hpcCBmcm9tIFwiLi9zaGlwLmpzXCI7XG5pbXBvcnQgR2FtZUJvYXJkIGZyb20gXCIuL2dhbWVCb2FyZC5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQbGF5ZXIge1xuICBjb25zdHJ1Y3Rvcihpc0NvbXB1dGVyID0gZmFsc2UpIHtcbiAgICB0aGlzLmdhbWVCb2FyZCA9IG5ldyBHYW1lQm9hcmQoKTtcbiAgICB0aGlzLmlzQ29tcHV0ZXIgPSBpc0NvbXB1dGVyO1xuICAgIHRoaXMucHJldmlvdXNBdHRhY2tzID0gW107IC8vIFRyYWNrIGFsbCBhdHRlbXB0ZWQgY29vcmRpbmF0ZXNcbiAgICB0aGlzLmhpdFF1ZXVlID0gW107IC8vIFF1ZXVlIG9mIGFkamFjZW50IGNlbGxzIHRvIHRyeSBhZnRlciBhIGhpdFxuICB9XG5cbiAgYXR0YWNrKG9wcG9uZW50LCBjb29yZCkge1xuICAgIGNvbnNvbGUubG9nKGBBdHRhY2tpbmcgJHtjb29yZH0uLi5gKTtcbiAgICBjb25zdCByZXN1bHQgPSBvcHBvbmVudC5nYW1lQm9hcmQucmVjZWl2ZUF0dGFjayhjb29yZCk7XG5cbiAgICBpZiAocmVzdWx0ID09PSB0cnVlKSB7XG4gICAgICBjb25zb2xlLmxvZyhgSGl0IGF0ICR7Y29vcmR9ISBFbnF1ZXVpbmcgYWRqYWNlbnQgY2VsbHMuYCk7XG4gICAgICB0aGlzLmVucXVldWVBZGphY2VudENlbGxzKGNvb3JkKTsgLy8gQWRkIGFkamFjZW50IGNlbGxzIHRvIHF1ZXVlIG9uIGhpdFxuICAgIH0gZWxzZSB7XG4gICAgICBjb25zb2xlLmxvZyhgTWlzcyBhdCAke2Nvb3JkfS5gKTtcbiAgICB9XG5cbiAgICAvLyBSZWNvcmQgYXR0YWNrIGF0dGVtcHRcbiAgICB0aGlzLnByZXZpb3VzQXR0YWNrcy5wdXNoKGNvb3JkKTtcbiAgICByZXR1cm4gcmVzdWx0O1xuICB9XG5cbiAgLy8gQWRkIGFkamFjZW50IGNlbGxzIHRvIHRoZSBxdWV1ZSBpZiB0aGV5IGhhdmVuJ3QgYmVlbiBhdHRlbXB0ZWRcbiAgZW5xdWV1ZUFkamFjZW50Q2VsbHMoW3gsIHldKSB7XG4gICAgY29uc3QgYWRqYWNlbnRDb29yZHMgPSBbXG4gICAgICBbeCArIDEsIHldLFxuICAgICAgW3ggLSAxLCB5XSxcbiAgICAgIFt4LCB5ICsgMV0sXG4gICAgICBbeCwgeSAtIDFdLFxuICAgIF07XG5cbiAgICBhZGphY2VudENvb3Jkcy5mb3JFYWNoKChjb29yZCkgPT4ge1xuICAgICAgaWYgKHRoaXMuaXNWYWxpZENvb3JkKGNvb3JkKSAmJiAhdGhpcy5pc1ByZXZpb3VzbHlBdHRhY2tlZChjb29yZCkpIHtcbiAgICAgICAgdGhpcy5oaXRRdWV1ZS5wdXNoKGNvb3JkKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIC8vIENoZWNrIGlmIGEgY29vcmRpbmF0ZSBpcyB3aXRoaW4gYm91bmRzXG4gIGlzVmFsaWRDb29yZChbeCwgeV0pIHtcbiAgICByZXR1cm4geCA+PSAwICYmIHggPCAxMCAmJiB5ID49IDAgJiYgeSA8IDEwO1xuICB9XG5cbiAgLy8gQ2hlY2sgaWYgYSBjb29yZGluYXRlIGhhc24ndCBiZWVuIGF0dGFja2VkXG4gIGlzUHJldmlvdXNseUF0dGFja2VkKGNvb3JkKSB7XG4gICAgcmV0dXJuIHRoaXMucHJldmlvdXNBdHRhY2tzLnNvbWUoXG4gICAgICAocHJldmlvdXMpID0+IHByZXZpb3VzWzBdID09PSBjb29yZFswXSAmJiBwcmV2aW91c1sxXSA9PT0gY29vcmRbMV1cbiAgICApO1xuICB9XG5cbiAgZ2VuZXJhdGVTbWFydEF0dGFjaygpIHtcbiAgICAvLyBJZiB0aGVyZSBhcmUgY2VsbHMgaW4gdGhlIGhpdCBxdWV1ZSwgcHJpb3JpdGl6ZSB0aGVtXG4gICAgaWYgKHRoaXMuaGl0UXVldWUubGVuZ3RoID4gMCkge1xuICAgICAgdGhpcy5wcmV2aW91c0F0dGFja3MucHVzaCh0aGlzLmhpdFF1ZXVlWzBdKTtcbiAgICAgIHJldHVybiB0aGlzLmhpdFF1ZXVlLnNoaWZ0KCk7IC8vIEdldCB0aGUgbmV4dCBhZGphY2VudCBjZWxsIHRvIGF0dGFja1xuICAgIH1cblxuICAgIC8vIEZhbGxiYWNrIHRvIGEgcmFuZG9tIGF0dGFjayBpZiBubyBhZGphY2VudCBjZWxscyByZW1haW5cbiAgICByZXR1cm4gdGhpcy5nZW5lcmF0ZVJhbmRvbUF0dGFjaygpO1xuICB9XG5cbiAgZ2VuZXJhdGVSYW5kb21BdHRhY2soKSB7XG4gICAgLy8gUHJpb3JpdGl6ZSBjb29yZGluYXRlcyBmcm9tIGhpdFF1ZXVlXG4gICAgaWYgKHRoaXMuaGl0UXVldWUubGVuZ3RoID4gMCkge1xuICAgICAgdGhpcy5wcmV2aW91c0F0dGFja3MucHVzaCh0aGlzLmhpdFF1ZXVlWzBdKTtcbiAgICAgIHJldHVybiB0aGlzLmhpdFF1ZXVlLnNoaWZ0KCk7XG4gICAgfVxuXG4gICAgLy8gT3RoZXJ3aXNlLCBnZW5lcmF0ZSByYW5kb20gdW5pcXVlIGNvb3JkaW5hdGVzXG4gICAgbGV0IGNvb3JkO1xuICAgIGRvIHtcbiAgICAgIGNvb3JkID0gW01hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDEwKSwgTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMTApXTtcbiAgICB9IHdoaWxlIChcbiAgICAgIHRoaXMucHJldmlvdXNBdHRhY2tzLnNvbWUoXG4gICAgICAgIChhdHRhY2tlZENvb3JkKSA9PlxuICAgICAgICAgIGF0dGFja2VkQ29vcmRbMF0gPT09IGNvb3JkWzBdICYmIGF0dGFja2VkQ29vcmRbMV0gPT09IGNvb3JkWzFdXG4gICAgICApXG4gICAgKTtcblxuICAgIHRoaXMucHJldmlvdXNBdHRhY2tzLnB1c2goY29vcmQpO1xuICAgIHJldHVybiBjb29yZDtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IFBsYXllcjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/player.js\n");

/***/ }),

/***/ "./src/ship.js":
/*!*********************!*\
  !*** ./src/ship.js ***!
  \*********************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Ship)\n/* harmony export */ });\n/* module decorator */ module = __webpack_require__.hmd(module);\nclass Ship {\n  constructor(length) {\n    this.length = length;\n    this.hits = 0;\n  }\n\n  hit() {\n    this.hits += 1;\n  }\n\n  isSunk() {\n    return this.hits >= this.length;\n  }\n}\nmodule.exports = Ship;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2hpcC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vc3JjL3NoaXAuanM/ZDAzNyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBjbGFzcyBTaGlwIHtcbiAgY29uc3RydWN0b3IobGVuZ3RoKSB7XG4gICAgdGhpcy5sZW5ndGggPSBsZW5ndGg7XG4gICAgdGhpcy5oaXRzID0gMDtcbiAgfVxuXG4gIGhpdCgpIHtcbiAgICB0aGlzLmhpdHMgKz0gMTtcbiAgfVxuXG4gIGlzU3VuaygpIHtcbiAgICByZXR1cm4gdGhpcy5oaXRzID49IHRoaXMubGVuZ3RoO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IFNoaXA7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/ship.js\n");

/***/ })

},
/******/ __webpack_require__ => { // webpackRuntimeModules
/******/ var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
/******/ var __webpack_exports__ = (__webpack_exec__("./src/gameController.js"));
/******/ }
]);