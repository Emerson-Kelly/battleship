/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkbattleship"] = self["webpackChunkbattleship"] || []).push([["rulesModal"],{

/***/ "./src/rulesModal.js":
/*!***************************!*\
  !*** ./src/rulesModal.js ***!
  \***************************/
/***/ (() => {

eval("const rulesModalButton = document.getElementById(\"rules-button\");\nconst rulesModal = document.getElementById(\"rules-modal\");\nrulesModalButton.addEventListener(\"click\", rulesModalFunctionality);\nfunction rulesModalFunctionality() {\n  rulesModal.innerHTML = `\n    <dialog id=\"my_modal_6\" class=\"modal\">\n    <form method=\"dialog\" class=\"modal-box about-modal\">\n        <h1 id=\"battleship-rules\" class=\"font-bold text-xl\">Battleship Game Rules</h1>\n        <br>\n\n        <h3 class=\"font-bold text-lg\">Objective:</h3>\n        <p class=\"py-4\">The goal of Battleship is to sink all of your opponent's ships before they sink yours.</p>\n        \n        <h3 class=\"font-bold text-lg\">Setup:</h3>\n        <ul class=\"py-4\">\n            <li><strong>Game Boards:</strong> Each player has a 10x10 grid to place their ships and track opponent guesses.</li>\n            <li><strong>Ships:</strong> Players have 5 ships of varying lengths:\n            <br>\n            &nbsp;\n                <ul>\n                    <li>- Carrier (5 spaces)</li>\n                    <li>- Battleship (4 spaces)</li>\n                    <li>- Destroyer (3 spaces)</li>\n                    <li>- Submarine (3 spaces)</li>\n                    <li>- Patrol Boat (2 spaces)</li>\n                </ul>\n            </li>\n            <br>\n            <li><strong>Placement:</strong> Clicking ship icons before starting the game will rotate them horizontally or vertically. When ready, the player can drag-and-drop ships onto the grid (as long as they don't overlap with other ships or extend beyond the grid).</li>\n        </ul>\n\n        <h3 class=\"font-bold text-lg\">Gameplay:</h3>\n        <ul class=\"py-4\">\n            <li>The player can begin their first turn â€” click on a cell to attack.</li>\n            <br>\n            <li>The computer board will indicate if the coordinate is a \"hit\" (red dot), \"miss\" (white dot), or \"sunk\" (sunken ship icon reveals)</li>\n            <br>\n            <li>Your grid will also be marked with the same indicators as the computer attacks your board throughout the game.</li>\n        </ul>\n\n        <h3 class=\"font-bold text-lg\">Winning the Game:</h3>\n        <p class=\"py-4\">The first player to sink all of their opponent's ships wins the game!</p>\n\n        <h3 class=\"font-bold text-lg\">Tips:</h3>\n        <ul class=\"py-4\">\n            <li>Use a strategy to avoid random guessing.</li>\n            <li>Track hits to identify ship placements more efficiently.</li>\n            <li>Don't cluster your ships together to reduce vulnerability.</li>\n        </ul>\n\n        <div class=\"modal-action\">\n            <button id=\"close-about\" class=\"btn\">Close</button>\n        </div>\n    </form>\n</dialog>\n\n    `;\n\n  // Access the modal after it has been added to the DOM\n  const modalDialog = document.getElementById(\"my_modal_6\");\n  if (modalDialog) {\n    modalDialog.showModal();\n    document.getElementById(\"close-about\").addEventListener(\"click\", () => {\n      modalDialog.close();\n    });\n  } else {\n    console.error(\"Modal dialog not found!\");\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcnVsZXNNb2RhbC5qcyIsIm5hbWVzIjpbInJ1bGVzTW9kYWxCdXR0b24iLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIiwicnVsZXNNb2RhbCIsImFkZEV2ZW50TGlzdGVuZXIiLCJydWxlc01vZGFsRnVuY3Rpb25hbGl0eSIsImlubmVySFRNTCIsIm1vZGFsRGlhbG9nIiwic2hvd01vZGFsIiwiY2xvc2UiLCJjb25zb2xlIiwiZXJyb3IiXSwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsid2VicGFjazovL2JhdHRsZXNoaXAvLi9zcmMvcnVsZXNNb2RhbC5qcz82NmM4Il0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHJ1bGVzTW9kYWxCdXR0b24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInJ1bGVzLWJ1dHRvblwiKTtcbmNvbnN0IHJ1bGVzTW9kYWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInJ1bGVzLW1vZGFsXCIpO1xuXG5ydWxlc01vZGFsQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBydWxlc01vZGFsRnVuY3Rpb25hbGl0eSk7XG5cbmZ1bmN0aW9uIHJ1bGVzTW9kYWxGdW5jdGlvbmFsaXR5KCkge1xuICBydWxlc01vZGFsLmlubmVySFRNTCA9IGBcbiAgICA8ZGlhbG9nIGlkPVwibXlfbW9kYWxfNlwiIGNsYXNzPVwibW9kYWxcIj5cbiAgICA8Zm9ybSBtZXRob2Q9XCJkaWFsb2dcIiBjbGFzcz1cIm1vZGFsLWJveCBhYm91dC1tb2RhbFwiPlxuICAgICAgICA8aDEgaWQ9XCJiYXR0bGVzaGlwLXJ1bGVzXCIgY2xhc3M9XCJmb250LWJvbGQgdGV4dC14bFwiPkJhdHRsZXNoaXAgR2FtZSBSdWxlczwvaDE+XG4gICAgICAgIDxicj5cblxuICAgICAgICA8aDMgY2xhc3M9XCJmb250LWJvbGQgdGV4dC1sZ1wiPk9iamVjdGl2ZTo8L2gzPlxuICAgICAgICA8cCBjbGFzcz1cInB5LTRcIj5UaGUgZ29hbCBvZiBCYXR0bGVzaGlwIGlzIHRvIHNpbmsgYWxsIG9mIHlvdXIgb3Bwb25lbnQncyBzaGlwcyBiZWZvcmUgdGhleSBzaW5rIHlvdXJzLjwvcD5cbiAgICAgICAgXG4gICAgICAgIDxoMyBjbGFzcz1cImZvbnQtYm9sZCB0ZXh0LWxnXCI+U2V0dXA6PC9oMz5cbiAgICAgICAgPHVsIGNsYXNzPVwicHktNFwiPlxuICAgICAgICAgICAgPGxpPjxzdHJvbmc+R2FtZSBCb2FyZHM6PC9zdHJvbmc+IEVhY2ggcGxheWVyIGhhcyBhIDEweDEwIGdyaWQgdG8gcGxhY2UgdGhlaXIgc2hpcHMgYW5kIHRyYWNrIG9wcG9uZW50IGd1ZXNzZXMuPC9saT5cbiAgICAgICAgICAgIDxsaT48c3Ryb25nPlNoaXBzOjwvc3Ryb25nPiBQbGF5ZXJzIGhhdmUgNSBzaGlwcyBvZiB2YXJ5aW5nIGxlbmd0aHM6XG4gICAgICAgICAgICA8YnI+XG4gICAgICAgICAgICAmbmJzcDtcbiAgICAgICAgICAgICAgICA8dWw+XG4gICAgICAgICAgICAgICAgICAgIDxsaT4tIENhcnJpZXIgKDUgc3BhY2VzKTwvbGk+XG4gICAgICAgICAgICAgICAgICAgIDxsaT4tIEJhdHRsZXNoaXAgKDQgc3BhY2VzKTwvbGk+XG4gICAgICAgICAgICAgICAgICAgIDxsaT4tIERlc3Ryb3llciAoMyBzcGFjZXMpPC9saT5cbiAgICAgICAgICAgICAgICAgICAgPGxpPi0gU3VibWFyaW5lICgzIHNwYWNlcyk8L2xpPlxuICAgICAgICAgICAgICAgICAgICA8bGk+LSBQYXRyb2wgQm9hdCAoMiBzcGFjZXMpPC9saT5cbiAgICAgICAgICAgICAgICA8L3VsPlxuICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgIDxicj5cbiAgICAgICAgICAgIDxsaT48c3Ryb25nPlBsYWNlbWVudDo8L3N0cm9uZz4gQ2xpY2tpbmcgc2hpcCBpY29ucyBiZWZvcmUgc3RhcnRpbmcgdGhlIGdhbWUgd2lsbCByb3RhdGUgdGhlbSBob3Jpem9udGFsbHkgb3IgdmVydGljYWxseS4gV2hlbiByZWFkeSwgdGhlIHBsYXllciBjYW4gZHJhZy1hbmQtZHJvcCBzaGlwcyBvbnRvIHRoZSBncmlkIChhcyBsb25nIGFzIHRoZXkgZG9uJ3Qgb3ZlcmxhcCB3aXRoIG90aGVyIHNoaXBzIG9yIGV4dGVuZCBiZXlvbmQgdGhlIGdyaWQpLjwvbGk+XG4gICAgICAgIDwvdWw+XG5cbiAgICAgICAgPGgzIGNsYXNzPVwiZm9udC1ib2xkIHRleHQtbGdcIj5HYW1lcGxheTo8L2gzPlxuICAgICAgICA8dWwgY2xhc3M9XCJweS00XCI+XG4gICAgICAgICAgICA8bGk+VGhlIHBsYXllciBjYW4gYmVnaW4gdGhlaXIgZmlyc3QgdHVybiDigJQgY2xpY2sgb24gYSBjZWxsIHRvIGF0dGFjay48L2xpPlxuICAgICAgICAgICAgPGJyPlxuICAgICAgICAgICAgPGxpPlRoZSBjb21wdXRlciBib2FyZCB3aWxsIGluZGljYXRlIGlmIHRoZSBjb29yZGluYXRlIGlzIGEgXCJoaXRcIiAocmVkIGRvdCksIFwibWlzc1wiICh3aGl0ZSBkb3QpLCBvciBcInN1bmtcIiAoc3Vua2VuIHNoaXAgaWNvbiByZXZlYWxzKTwvbGk+XG4gICAgICAgICAgICA8YnI+XG4gICAgICAgICAgICA8bGk+WW91ciBncmlkIHdpbGwgYWxzbyBiZSBtYXJrZWQgd2l0aCB0aGUgc2FtZSBpbmRpY2F0b3JzIGFzIHRoZSBjb21wdXRlciBhdHRhY2tzIHlvdXIgYm9hcmQgdGhyb3VnaG91dCB0aGUgZ2FtZS48L2xpPlxuICAgICAgICA8L3VsPlxuXG4gICAgICAgIDxoMyBjbGFzcz1cImZvbnQtYm9sZCB0ZXh0LWxnXCI+V2lubmluZyB0aGUgR2FtZTo8L2gzPlxuICAgICAgICA8cCBjbGFzcz1cInB5LTRcIj5UaGUgZmlyc3QgcGxheWVyIHRvIHNpbmsgYWxsIG9mIHRoZWlyIG9wcG9uZW50J3Mgc2hpcHMgd2lucyB0aGUgZ2FtZSE8L3A+XG5cbiAgICAgICAgPGgzIGNsYXNzPVwiZm9udC1ib2xkIHRleHQtbGdcIj5UaXBzOjwvaDM+XG4gICAgICAgIDx1bCBjbGFzcz1cInB5LTRcIj5cbiAgICAgICAgICAgIDxsaT5Vc2UgYSBzdHJhdGVneSB0byBhdm9pZCByYW5kb20gZ3Vlc3NpbmcuPC9saT5cbiAgICAgICAgICAgIDxsaT5UcmFjayBoaXRzIHRvIGlkZW50aWZ5IHNoaXAgcGxhY2VtZW50cyBtb3JlIGVmZmljaWVudGx5LjwvbGk+XG4gICAgICAgICAgICA8bGk+RG9uJ3QgY2x1c3RlciB5b3VyIHNoaXBzIHRvZ2V0aGVyIHRvIHJlZHVjZSB2dWxuZXJhYmlsaXR5LjwvbGk+XG4gICAgICAgIDwvdWw+XG5cbiAgICAgICAgPGRpdiBjbGFzcz1cIm1vZGFsLWFjdGlvblwiPlxuICAgICAgICAgICAgPGJ1dHRvbiBpZD1cImNsb3NlLWFib3V0XCIgY2xhc3M9XCJidG5cIj5DbG9zZTwvYnV0dG9uPlxuICAgICAgICA8L2Rpdj5cbiAgICA8L2Zvcm0+XG48L2RpYWxvZz5cblxuICAgIGA7XG5cbiAgLy8gQWNjZXNzIHRoZSBtb2RhbCBhZnRlciBpdCBoYXMgYmVlbiBhZGRlZCB0byB0aGUgRE9NXG4gIGNvbnN0IG1vZGFsRGlhbG9nID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJteV9tb2RhbF82XCIpO1xuICBpZiAobW9kYWxEaWFsb2cpIHtcbiAgICBtb2RhbERpYWxvZy5zaG93TW9kYWwoKTtcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImNsb3NlLWFib3V0XCIpLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICBtb2RhbERpYWxvZy5jbG9zZSgpO1xuICAgIH0pO1xuICB9IGVsc2Uge1xuICAgIGNvbnNvbGUuZXJyb3IoXCJNb2RhbCBkaWFsb2cgbm90IGZvdW5kIVwiKTtcbiAgfVxufVxuIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxnQkFBZ0IsR0FBR0MsUUFBUSxDQUFDQyxjQUFjLENBQUMsY0FBYyxDQUFDO0FBQ2hFLE1BQU1DLFVBQVUsR0FBR0YsUUFBUSxDQUFDQyxjQUFjLENBQUMsYUFBYSxDQUFDO0FBRXpERixnQkFBZ0IsQ0FBQ0ksZ0JBQWdCLENBQUMsT0FBTyxFQUFFQyx1QkFBdUIsQ0FBQztBQUVuRSxTQUFTQSx1QkFBdUJBLENBQUEsRUFBRztFQUNqQ0YsVUFBVSxDQUFDRyxTQUFTLEdBQUc7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7RUFFSDtFQUNBLE1BQU1DLFdBQVcsR0FBR04sUUFBUSxDQUFDQyxjQUFjLENBQUMsWUFBWSxDQUFDO0VBQ3pELElBQUlLLFdBQVcsRUFBRTtJQUNmQSxXQUFXLENBQUNDLFNBQVMsQ0FBQyxDQUFDO0lBQ3ZCUCxRQUFRLENBQUNDLGNBQWMsQ0FBQyxhQUFhLENBQUMsQ0FBQ0UsZ0JBQWdCLENBQUMsT0FBTyxFQUFFLE1BQU07TUFDckVHLFdBQVcsQ0FBQ0UsS0FBSyxDQUFDLENBQUM7SUFDckIsQ0FBQyxDQUFDO0VBQ0osQ0FBQyxNQUFNO0lBQ0xDLE9BQU8sQ0FBQ0MsS0FBSyxDQUFDLHlCQUF5QixDQUFDO0VBQzFDO0FBQ0YiLCJpZ25vcmVMaXN0IjpbXX0=\n//# sourceURL=webpack-internal:///./src/rulesModal.js\n");

/***/ })

},
/******/ __webpack_require__ => { // webpackRuntimeModules
/******/ var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
/******/ var __webpack_exports__ = (__webpack_exec__("./src/rulesModal.js"));
/******/ }
]);