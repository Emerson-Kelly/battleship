/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkbattleship"] = self["webpackChunkbattleship"] || []).push([["rulesModal"],{

/***/ "./src/rulesModal.js":
/*!***************************!*\
  !*** ./src/rulesModal.js ***!
  \***************************/
/***/ (() => {

eval("const rulesModalButton = document.getElementById('about-button');\nconst rulesModal = document.getElementById('about-modal');\nrulesModalButton.addEventListener('click', rulesModalFunctionality);\nfunction rulesModalFunctionality() {\n  rulesModal.innerHTML = `\n    <dialog id=\"my_modal_6\" class=\"modal\">\n    <form method=\"dialog\" class=\"modal-box about-modal\">\n        <h1 id=\"battleship-rules\" class=\"font-bold text-xl\">Battleship Game Rules</h1>\n        <br>\n\n        <h3 class=\"font-bold text-lg\">Objective:</h3>\n        <p class=\"py-4\">The goal of Battleship is to sink all of your opponent's ships before they sink yours.</p>\n        \n        <h3 class=\"font-bold text-lg\">Setup:</h3>\n        <ul class=\"py-4\">\n            <li><strong>Game Boards:</strong> Each player has a 10x10 grid to place their ships and track opponent guesses.</li>\n            <li><strong>Ships:</strong> Players have 5 ships of varying lengths:\n            <br>\n            &nbsp;\n                <ul>\n                    <li>- Carrier (5 spaces)</li>\n                    <li>- Battleship (4 spaces)</li>\n                    <li>- Destroyer (3 spaces)</li>\n                    <li>- Submarine (3 spaces)</li>\n                    <li>- Patrol Boat (2 spaces)</li>\n                </ul>\n            </li>\n            <br>\n            <li><strong>Placement:</strong> Clicking ship icons before starting the game will rotate them horizontally or vertically. When ready, the player can drag-and-drop ships onto the grid (as long as they don't overlap with other ships or extend beyond the grid).</li>\n        </ul>\n\n        <h3 class=\"font-bold text-lg\">Gameplay:</h3>\n        <ul class=\"py-4\">\n            <li>The player can begin their first turn â€” click on a cell to attack.</li>\n            <br>\n            <li>The computer board will indicate if the coordinate is a \"hit\" (red dot), \"miss\" (white dot), or \"sunk\" (sunken ship icon reveals)</li>\n            <br>\n            <li>Your grid will also be marked with the same indicators as the computer attacks your board throughout the game.</li>\n        </ul>\n\n        <h3 class=\"font-bold text-lg\">Winning the Game:</h3>\n        <p class=\"py-4\">The first player to sink all of their opponent's ships wins the game!</p>\n\n        <h3 class=\"font-bold text-lg\">Tips:</h3>\n        <ul class=\"py-4\">\n            <li>Use a strategy to avoid random guessing.</li>\n            <li>Track hits to identify ship placements more efficiently.</li>\n            <li>Don't cluster your ships together to reduce vulnerability.</li>\n        </ul>\n\n        <div class=\"modal-action\">\n            <button id=\"close-about\" class=\"btn\">Close</button>\n        </div>\n    </form>\n</dialog>\n\n    `;\n\n  // Access the modal after it has been added to the DOM\n  const modalDialog = document.getElementById('my_modal_6');\n  if (modalDialog) {\n    modalDialog.showModal();\n    document.getElementById('close-about').addEventListener('click', () => {\n      modalDialog.close();\n    });\n  } else {\n    console.error('Modal dialog not found!');\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcnVsZXNNb2RhbC5qcyIsIm5hbWVzIjpbInJ1bGVzTW9kYWxCdXR0b24iLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIiwicnVsZXNNb2RhbCIsImFkZEV2ZW50TGlzdGVuZXIiLCJydWxlc01vZGFsRnVuY3Rpb25hbGl0eSIsImlubmVySFRNTCIsIm1vZGFsRGlhbG9nIiwic2hvd01vZGFsIiwiY2xvc2UiLCJjb25zb2xlIiwiZXJyb3IiXSwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsid2VicGFjazovL2JhdHRsZXNoaXAvLi9zcmMvcnVsZXNNb2RhbC5qcz82NmM4Il0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHJ1bGVzTW9kYWxCdXR0b24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYWJvdXQtYnV0dG9uJyk7XG5jb25zdCBydWxlc01vZGFsID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2Fib3V0LW1vZGFsJyk7XG5cbnJ1bGVzTW9kYWxCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBydWxlc01vZGFsRnVuY3Rpb25hbGl0eSk7XG5cbmZ1bmN0aW9uIHJ1bGVzTW9kYWxGdW5jdGlvbmFsaXR5KCkge1xuICAgIHJ1bGVzTW9kYWwuaW5uZXJIVE1MID0gYFxuICAgIDxkaWFsb2cgaWQ9XCJteV9tb2RhbF82XCIgY2xhc3M9XCJtb2RhbFwiPlxuICAgIDxmb3JtIG1ldGhvZD1cImRpYWxvZ1wiIGNsYXNzPVwibW9kYWwtYm94IGFib3V0LW1vZGFsXCI+XG4gICAgICAgIDxoMSBpZD1cImJhdHRsZXNoaXAtcnVsZXNcIiBjbGFzcz1cImZvbnQtYm9sZCB0ZXh0LXhsXCI+QmF0dGxlc2hpcCBHYW1lIFJ1bGVzPC9oMT5cbiAgICAgICAgPGJyPlxuXG4gICAgICAgIDxoMyBjbGFzcz1cImZvbnQtYm9sZCB0ZXh0LWxnXCI+T2JqZWN0aXZlOjwvaDM+XG4gICAgICAgIDxwIGNsYXNzPVwicHktNFwiPlRoZSBnb2FsIG9mIEJhdHRsZXNoaXAgaXMgdG8gc2luayBhbGwgb2YgeW91ciBvcHBvbmVudCdzIHNoaXBzIGJlZm9yZSB0aGV5IHNpbmsgeW91cnMuPC9wPlxuICAgICAgICBcbiAgICAgICAgPGgzIGNsYXNzPVwiZm9udC1ib2xkIHRleHQtbGdcIj5TZXR1cDo8L2gzPlxuICAgICAgICA8dWwgY2xhc3M9XCJweS00XCI+XG4gICAgICAgICAgICA8bGk+PHN0cm9uZz5HYW1lIEJvYXJkczo8L3N0cm9uZz4gRWFjaCBwbGF5ZXIgaGFzIGEgMTB4MTAgZ3JpZCB0byBwbGFjZSB0aGVpciBzaGlwcyBhbmQgdHJhY2sgb3Bwb25lbnQgZ3Vlc3Nlcy48L2xpPlxuICAgICAgICAgICAgPGxpPjxzdHJvbmc+U2hpcHM6PC9zdHJvbmc+IFBsYXllcnMgaGF2ZSA1IHNoaXBzIG9mIHZhcnlpbmcgbGVuZ3RoczpcbiAgICAgICAgICAgIDxicj5cbiAgICAgICAgICAgICZuYnNwO1xuICAgICAgICAgICAgICAgIDx1bD5cbiAgICAgICAgICAgICAgICAgICAgPGxpPi0gQ2FycmllciAoNSBzcGFjZXMpPC9saT5cbiAgICAgICAgICAgICAgICAgICAgPGxpPi0gQmF0dGxlc2hpcCAoNCBzcGFjZXMpPC9saT5cbiAgICAgICAgICAgICAgICAgICAgPGxpPi0gRGVzdHJveWVyICgzIHNwYWNlcyk8L2xpPlxuICAgICAgICAgICAgICAgICAgICA8bGk+LSBTdWJtYXJpbmUgKDMgc3BhY2VzKTwvbGk+XG4gICAgICAgICAgICAgICAgICAgIDxsaT4tIFBhdHJvbCBCb2F0ICgyIHNwYWNlcyk8L2xpPlxuICAgICAgICAgICAgICAgIDwvdWw+XG4gICAgICAgICAgICA8L2xpPlxuICAgICAgICAgICAgPGJyPlxuICAgICAgICAgICAgPGxpPjxzdHJvbmc+UGxhY2VtZW50Ojwvc3Ryb25nPiBDbGlja2luZyBzaGlwIGljb25zIGJlZm9yZSBzdGFydGluZyB0aGUgZ2FtZSB3aWxsIHJvdGF0ZSB0aGVtIGhvcml6b250YWxseSBvciB2ZXJ0aWNhbGx5LiBXaGVuIHJlYWR5LCB0aGUgcGxheWVyIGNhbiBkcmFnLWFuZC1kcm9wIHNoaXBzIG9udG8gdGhlIGdyaWQgKGFzIGxvbmcgYXMgdGhleSBkb24ndCBvdmVybGFwIHdpdGggb3RoZXIgc2hpcHMgb3IgZXh0ZW5kIGJleW9uZCB0aGUgZ3JpZCkuPC9saT5cbiAgICAgICAgPC91bD5cblxuICAgICAgICA8aDMgY2xhc3M9XCJmb250LWJvbGQgdGV4dC1sZ1wiPkdhbWVwbGF5OjwvaDM+XG4gICAgICAgIDx1bCBjbGFzcz1cInB5LTRcIj5cbiAgICAgICAgICAgIDxsaT5UaGUgcGxheWVyIGNhbiBiZWdpbiB0aGVpciBmaXJzdCB0dXJuIOKAlCBjbGljayBvbiBhIGNlbGwgdG8gYXR0YWNrLjwvbGk+XG4gICAgICAgICAgICA8YnI+XG4gICAgICAgICAgICA8bGk+VGhlIGNvbXB1dGVyIGJvYXJkIHdpbGwgaW5kaWNhdGUgaWYgdGhlIGNvb3JkaW5hdGUgaXMgYSBcImhpdFwiIChyZWQgZG90KSwgXCJtaXNzXCIgKHdoaXRlIGRvdCksIG9yIFwic3Vua1wiIChzdW5rZW4gc2hpcCBpY29uIHJldmVhbHMpPC9saT5cbiAgICAgICAgICAgIDxicj5cbiAgICAgICAgICAgIDxsaT5Zb3VyIGdyaWQgd2lsbCBhbHNvIGJlIG1hcmtlZCB3aXRoIHRoZSBzYW1lIGluZGljYXRvcnMgYXMgdGhlIGNvbXB1dGVyIGF0dGFja3MgeW91ciBib2FyZCB0aHJvdWdob3V0IHRoZSBnYW1lLjwvbGk+XG4gICAgICAgIDwvdWw+XG5cbiAgICAgICAgPGgzIGNsYXNzPVwiZm9udC1ib2xkIHRleHQtbGdcIj5XaW5uaW5nIHRoZSBHYW1lOjwvaDM+XG4gICAgICAgIDxwIGNsYXNzPVwicHktNFwiPlRoZSBmaXJzdCBwbGF5ZXIgdG8gc2luayBhbGwgb2YgdGhlaXIgb3Bwb25lbnQncyBzaGlwcyB3aW5zIHRoZSBnYW1lITwvcD5cblxuICAgICAgICA8aDMgY2xhc3M9XCJmb250LWJvbGQgdGV4dC1sZ1wiPlRpcHM6PC9oMz5cbiAgICAgICAgPHVsIGNsYXNzPVwicHktNFwiPlxuICAgICAgICAgICAgPGxpPlVzZSBhIHN0cmF0ZWd5IHRvIGF2b2lkIHJhbmRvbSBndWVzc2luZy48L2xpPlxuICAgICAgICAgICAgPGxpPlRyYWNrIGhpdHMgdG8gaWRlbnRpZnkgc2hpcCBwbGFjZW1lbnRzIG1vcmUgZWZmaWNpZW50bHkuPC9saT5cbiAgICAgICAgICAgIDxsaT5Eb24ndCBjbHVzdGVyIHlvdXIgc2hpcHMgdG9nZXRoZXIgdG8gcmVkdWNlIHZ1bG5lcmFiaWxpdHkuPC9saT5cbiAgICAgICAgPC91bD5cblxuICAgICAgICA8ZGl2IGNsYXNzPVwibW9kYWwtYWN0aW9uXCI+XG4gICAgICAgICAgICA8YnV0dG9uIGlkPVwiY2xvc2UtYWJvdXRcIiBjbGFzcz1cImJ0blwiPkNsb3NlPC9idXR0b24+XG4gICAgICAgIDwvZGl2PlxuICAgIDwvZm9ybT5cbjwvZGlhbG9nPlxuXG4gICAgYDtcblxuICAgXG4gICAgLy8gQWNjZXNzIHRoZSBtb2RhbCBhZnRlciBpdCBoYXMgYmVlbiBhZGRlZCB0byB0aGUgRE9NXG4gICAgY29uc3QgbW9kYWxEaWFsb2cgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbXlfbW9kYWxfNicpO1xuICAgIGlmIChtb2RhbERpYWxvZykge1xuICAgICAgICBtb2RhbERpYWxvZy5zaG93TW9kYWwoKTtcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2Nsb3NlLWFib3V0JykuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gICAgICAgICAgICBtb2RhbERpYWxvZy5jbG9zZSgpO1xuICAgICAgICB9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgICBjb25zb2xlLmVycm9yKCdNb2RhbCBkaWFsb2cgbm90IGZvdW5kIScpO1xuICAgIH1cbn1cbiJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsZ0JBQWdCLEdBQUdDLFFBQVEsQ0FBQ0MsY0FBYyxDQUFDLGNBQWMsQ0FBQztBQUNoRSxNQUFNQyxVQUFVLEdBQUdGLFFBQVEsQ0FBQ0MsY0FBYyxDQUFDLGFBQWEsQ0FBQztBQUV6REYsZ0JBQWdCLENBQUNJLGdCQUFnQixDQUFDLE9BQU8sRUFBRUMsdUJBQXVCLENBQUM7QUFFbkUsU0FBU0EsdUJBQXVCQSxDQUFBLEVBQUc7RUFDL0JGLFVBQVUsQ0FBQ0csU0FBUyxHQUFHO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7O0VBR0Q7RUFDQSxNQUFNQyxXQUFXLEdBQUdOLFFBQVEsQ0FBQ0MsY0FBYyxDQUFDLFlBQVksQ0FBQztFQUN6RCxJQUFJSyxXQUFXLEVBQUU7SUFDYkEsV0FBVyxDQUFDQyxTQUFTLENBQUMsQ0FBQztJQUN2QlAsUUFBUSxDQUFDQyxjQUFjLENBQUMsYUFBYSxDQUFDLENBQUNFLGdCQUFnQixDQUFDLE9BQU8sRUFBRSxNQUFNO01BQ25FRyxXQUFXLENBQUNFLEtBQUssQ0FBQyxDQUFDO0lBQ3ZCLENBQUMsQ0FBQztFQUNOLENBQUMsTUFBTTtJQUNIQyxPQUFPLENBQUNDLEtBQUssQ0FBQyx5QkFBeUIsQ0FBQztFQUM1QztBQUNKIiwiaWdub3JlTGlzdCI6W119\n//# sourceURL=webpack-internal:///./src/rulesModal.js\n");

/***/ })

},
/******/ __webpack_require__ => { // webpackRuntimeModules
/******/ var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
/******/ var __webpack_exports__ = (__webpack_exec__("./src/rulesModal.js"));
/******/ }
]);